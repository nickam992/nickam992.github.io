/**
 * JS Console Widget
 * All code not previously covered by 3rd party licenses (MIT, etc) is copyright Inkling, 2013.
 */// Fake objects that get put into the execution scope. This prevents the user
// from getting easy access to globals that we want to protect. Yes, there are still tricks
// to get the global, but that why this is executed in a sandboxed iframe.
function addResult(e){var t='<section class="result"><code class="command prettyprint">'+formatInput(command)+"</code>"+'<span class="output prettyprint">'+formatOutput(e)+"</span>"+"</section>",n=$(".results");n.append(t);prettyPrint();n.scrollTop=n.scrollHeight}function cancel(e){e.preventDefault();$("#input").value="";forceBlur()}function forceBlur(){var e=$("#input"),t=document.createElement("div"),n=e.parentNode;n.replaceChild(t,e);n.replaceChild(e,t)}function formatInput(e){if(!e)return e;e=e.replace(/\n/g,"<br/>");e=e.replace(/ /g,"&nbsp;");return e}function formatOutput(e){if(typeof e=="undefined")return"";if(e instanceof Error)return e.toString();try{return JSON.stringify(e)}catch(t){}return e&&e.toString?e.toString():e}function runEvt(e){e.preventDefault();var t=$("#input");if(!t.val())return;executeCode(t.val());t.val("")}function executeCode(e){window.command=e;window.location.href="javascript:         try {             addResult(eval('                 with(window) {                    with(fakeScope) {                         ' + window.command + '                     }                 }             '));         } catch (e) {             addResult(e);         }         void 0"}function keyupEvt(e){if((e.shiftKey||e.metaKey||e.ctrlKey)&&e.keyCode==13){runEvt(e);e.preventDefault()}else if(e.keyCode==38){$("#input").val(command);e.preventDefault()}}var fakeScope={window:null,document:null,console:null,XMLHttpRequest:null},command;$(function(){var e=s9.initialParams.preexecute;e&&executeCode(e);var t=s9.initialParams.prepopulate;t&&($("#input").value=t);$("#run").click(runEvt);$("#cancel").click(cancel);$("#input").keyup(keyupEvt)});